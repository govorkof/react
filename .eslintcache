[{"D:\\proj\\src\\index.js":"1","D:\\proj\\src\\reportWebVitals.js":"2","D:\\proj\\src\\App.js":"3","D:\\proj\\src\\redux\\redux-store.js":"4","D:\\proj\\src\\components\\Header\\HeaderContainer.js":"5","D:\\proj\\src\\redux\\users-reducer.js":"6","D:\\proj\\src\\redux\\sidebar-reducer.js":"7","D:\\proj\\src\\redux\\profile-reducer.js":"8","D:\\proj\\src\\redux\\dialog-reducer.js":"9","D:\\proj\\src\\redux\\auth-reducer.js":"10","D:\\proj\\src\\components\\Users\\UsersContainer.jsx":"11","D:\\proj\\src\\components\\Dialogs\\DialogsContainer.jsx":"12","D:\\proj\\src\\components\\Navbar\\Navbar.jsx":"13","D:\\proj\\src\\components\\Login\\Login.jsx":"14","D:\\proj\\src\\components\\Profile\\ProfileContainer.jsx":"15","D:\\proj\\src\\api\\api.js":"16","D:\\proj\\src\\components\\Header\\Header.jsx":"17","D:\\proj\\src\\hoc\\withAuthRedirect.js":"18","D:\\proj\\src\\components\\common\\Preloader\\Preloader.js":"19","D:\\proj\\src\\components\\Profile\\Profile.jsx":"20","D:\\proj\\src\\components\\Dialogs\\Dialogs.jsx":"21","D:\\proj\\src\\components\\Users\\Users.jsx":"22","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"23","D:\\proj\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"24","D:\\proj\\src\\components\\Dialogs\\Message\\Message.jsx":"25","D:\\proj\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"26","D:\\proj\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"27","D:\\proj\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"28","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"29"},{"size":649,"mtime":1622609977072,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1622609977186,"results":"32","hashOfConfig":"31"},{"size":1081,"mtime":1622609977130,"results":"33","hashOfConfig":"31"},{"size":1165,"mtime":1622609977590,"results":"34","hashOfConfig":"31"},{"size":707,"mtime":1622609977746,"results":"35","hashOfConfig":"31"},{"size":3827,"mtime":1622609977559,"results":"36","hashOfConfig":"31"},{"size":139,"mtime":1622609977435,"results":"37","hashOfConfig":"31"},{"size":2039,"mtime":1622609977386,"results":"38","hashOfConfig":"31"},{"size":1349,"mtime":1622609977465,"results":"39","hashOfConfig":"31"},{"size":1038,"mtime":1622609977496,"results":"40","hashOfConfig":"31"},{"size":1852,"mtime":1622622912393,"results":"41","hashOfConfig":"31"},{"size":791,"mtime":1622622526360,"results":"42","hashOfConfig":"31"},{"size":814,"mtime":1622609977809,"results":"43","hashOfConfig":"31"},{"size":109,"mtime":1622609977871,"results":"44","hashOfConfig":"31"},{"size":960,"mtime":1622627621892,"results":"45","hashOfConfig":"31"},{"size":994,"mtime":1622609977637,"results":"46","hashOfConfig":"31"},{"size":520,"mtime":1622609977684,"results":"47","hashOfConfig":"31"},{"size":635,"mtime":1622621529367,"results":"48","hashOfConfig":"31"},{"size":217,"mtime":1622609978496,"results":"49","hashOfConfig":"31"},{"size":337,"mtime":1622609978168,"results":"50","hashOfConfig":"31"},{"size":1528,"mtime":1622623170054,"results":"51","hashOfConfig":"31"},{"size":2234,"mtime":1622609978137,"results":"52","hashOfConfig":"31"},{"size":780,"mtime":1622628857646,"results":"53","hashOfConfig":"31"},{"size":834,"mtime":1622609978324,"results":"54","hashOfConfig":"31"},{"size":208,"mtime":1622609978043,"results":"55","hashOfConfig":"31"},{"size":362,"mtime":1622609978012,"results":"56","hashOfConfig":"31"},{"size":1071,"mtime":1622609978402,"results":"57","hashOfConfig":"31"},{"size":459,"mtime":1622609978465,"results":"58","hashOfConfig":"31"},{"size":1441,"mtime":1622631474792,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1brdc61",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\proj\\src\\index.js",[],["129","130"],"D:\\proj\\src\\reportWebVitals.js",[],"D:\\proj\\src\\App.js",[],"D:\\proj\\src\\redux\\redux-store.js",[],"D:\\proj\\src\\components\\Header\\HeaderContainer.js",[],"D:\\proj\\src\\redux\\users-reducer.js",["131","132","133"],"import { usersAPI } from '../api/api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    folowingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.count }\r\n        case TOOGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, folowingInProgress: action.isFetching\r\n                    ? [...state.folowingInProgress, action.userId]\r\n                    : state.folowingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toogleIsFetching = (isFetching) => ({ type: TOOGLE_IS_FETCHING, isFetching })\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOOGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toogleIsFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toogleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;","D:\\proj\\src\\redux\\sidebar-reducer.js",[],"D:\\proj\\src\\redux\\profile-reducer.js",[],"D:\\proj\\src\\redux\\dialog-reducer.js",[],"D:\\proj\\src\\redux\\auth-reducer.js",[],"D:\\proj\\src\\components\\Users\\UsersContainer.jsx",["134"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    getUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader /> :\r\n                null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                folowingInProgress={this.props.folowingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        folowingInProgress: state.usersPage.folowingInProgress\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleIsFollowingProgress, getUsers })\r\n)(UsersContainer)\r\n\r\n\r\n","D:\\proj\\src\\components\\Dialogs\\DialogsContainer.jsx",["135"],"import { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialog-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { Redirect } from 'react-router'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        },\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n\r\n","D:\\proj\\src\\components\\Navbar\\Navbar.jsx",["136","137","138"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from \"./Navbar.module.css\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to='/profile' activeClassName={s.activelink}>Profile</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n      <NavLink to='/dialogs' activeClassName={s.activelink}>Message</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n      <NavLink to='/users' activeClassName={s.activelink}>Users</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Music</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Settings</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","D:\\proj\\src\\components\\Login\\Login.jsx",[],"D:\\proj\\src\\components\\Profile\\ProfileContainer.jsx",["139"],"D:\\proj\\src\\api\\api.js",[],"D:\\proj\\src\\components\\Header\\Header.jsx",["140"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://a.deviantart.net/avatars/j/a/jack070.png?7\" className={s.logo}></img>\r\n\r\n        <div className={s.loginBlock} >\r\n            {props.isAuth ?\r\n                props.login\r\n                : <NavLink to={'/login'}> Login </NavLink>\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header","D:\\proj\\src\\hoc\\withAuthRedirect.js",[],"D:\\proj\\src\\components\\common\\Preloader\\Preloader.js",["141"],"import React from 'react'\r\nimport preloader from '../../../assets/imajes/preloader.gif'\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","D:\\proj\\src\\components\\Profile\\Profile.jsx",[],"D:\\proj\\src\\components\\Dialogs\\Dialogs.jsx",["142"],"import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    // Создаем массив dialogsElements из dialogsData преобразовывая данные\r\n    let dialogsElements = state.dialogsData.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />)\r\n    // Аналогично\r\n    let messagesElements = state.messagesData.map(m => <Message message={m.message} ket={m.id} />)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div><textarea\r\n                        placeholder=\"Enter you message\"\r\n                        value={newMessageBody}\r\n                        onChange={onNewMessageChange}></textarea></div>\r\n                    <div><button onClick={onSendMessageClick}>Send</button></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","D:\\proj\\src\\components\\Users\\Users.jsx",["143","144","145"],"import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/imajes/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { usersAPI } from '../../api/api';\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                    onClick={(e) => { props.onPageChanged(p); }} > {p} </span>\r\n            })}\r\n        </div>\r\n\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id} >\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.folowingInProgress\r\n                                .some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id);\r\n                                }}>\r\n                                Unfollow</button>\r\n\r\n\r\n                            : <button disabled={props.folowingInProgress\r\n                                .some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id);\r\n                                }} >\r\n                                Follow</button>}\r\n\r\n\r\n                    </div>\r\n                </span>\r\n\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status} </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"} </div>\r\n                        <div>{\"u.location.city\"} </div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["146","147"],"D:\\proj\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["148"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, apdateNewPostTextActionCreator } from \"../../../redux/profile-reducer\"\r\nimport store from '../../../redux/redux-store';\r\nimport MyPosts from './MyPosts'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = apdateNewPostTextActionCreator(text);\r\n            dispatch(action)   \r\n        },\r\n        addPost: () => {\r\n            store.dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","D:\\proj\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\proj\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"D:\\proj\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",[],"D:\\proj\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["149"],"import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img src=\"http://stalker-way.ru/newd/stalker.gif\" />\r\n                id {props.number}\r\n                <br />\r\n                post {props.message}.\r\n                <br />\r\n                likes {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":57,"column":64,"nodeType":"157","messageId":"158","endLine":57,"endColumn":66},{"ruleId":"155","severity":1,"message":"159","line":88,"column":46,"nodeType":"157","messageId":"158","endLine":88,"endColumn":48},{"ruleId":"155","severity":1,"message":"159","line":101,"column":46,"nodeType":"157","messageId":"158","endLine":101,"endColumn":48},{"ruleId":"160","severity":1,"message":"161","line":12,"column":10,"nodeType":"162","messageId":"163","endLine":12,"endColumn":18},{"ruleId":"160","severity":1,"message":"164","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":18,"column":9,"nodeType":"167","endLine":18,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":21,"column":9,"nodeType":"167","endLine":21,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":24,"column":9,"nodeType":"167","endLine":24,"endColumn":12},{"ruleId":"160","severity":1,"message":"168","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":7,"column":9,"nodeType":"167","endLine":7,"endColumn":90},{"ruleId":"169","severity":1,"message":"170","line":7,"column":9,"nodeType":"167","endLine":7,"endColumn":32},{"ruleId":"160","severity":1,"message":"164","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":18},{"ruleId":"160","severity":1,"message":"171","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":6,"column":10,"nodeType":"162","messageId":"163","endLine":6,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":29,"column":29,"nodeType":"167","endLine":29,"endColumn":123},{"ruleId":"169","severity":1,"message":"170","line":15,"column":21,"nodeType":"167","endLine":15,"endColumn":111},{"ruleId":"169","severity":1,"message":"170","line":19,"column":21,"nodeType":"167","endLine":19,"endColumn":61},{"ruleId":"160","severity":1,"message":"172","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":8,"column":17,"nodeType":"167","endLine":8,"endColumn":69},{"ruleId":"160","severity":1,"message":"173","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":9},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'usersAPI' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'WithAuthRedirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'axios' is defined but never used.","'React' is defined but never used.","'s' is defined but never used.","no-global-assign","no-unsafe-negation"]