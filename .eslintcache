[{"D:\\proj\\src\\index.js":"1","D:\\proj\\src\\reportWebVitals.js":"2","D:\\proj\\src\\App.js":"3","D:\\proj\\src\\redux\\redux-store.js":"4","D:\\proj\\src\\redux\\sidebar-reducer.js":"5","D:\\proj\\src\\redux\\profile-reducer.js":"6","D:\\proj\\src\\redux\\users-reducer.js":"7","D:\\proj\\src\\redux\\dialog-reducer.js":"8","D:\\proj\\src\\redux\\app-reducer.js":"9","D:\\proj\\src\\redux\\auth-reducer.js":"10","D:\\proj\\src\\components\\common\\Preloader\\Preloader.js":"11","D:\\proj\\src\\components\\Header\\HeaderContainer.js":"12","D:\\proj\\src\\components\\Dialogs\\DialogsContainer.jsx":"13","D:\\proj\\src\\components\\Navbar\\Navbar.jsx":"14","D:\\proj\\src\\components\\Login\\Login.jsx":"15","D:\\proj\\src\\components\\Profile\\ProfileContainer.jsx":"16","D:\\proj\\src\\components\\Users\\UsersContainer.jsx":"17","D:\\proj\\src\\api\\api.js":"18","D:\\proj\\src\\components\\Header\\Header.jsx":"19","D:\\proj\\src\\hoc\\withAuthRedirect.js":"20","D:\\proj\\src\\utils\\validators\\validators.js":"21","D:\\proj\\src\\components\\Dialogs\\Dialogs.jsx":"22","D:\\proj\\src\\components\\Profile\\Profile.jsx":"23","D:\\proj\\src\\components\\common\\FormsControls\\FormsControls.jsx":"24","D:\\proj\\src\\components\\Users\\Users.jsx":"25","D:\\proj\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"26","D:\\proj\\src\\components\\Dialogs\\Message\\Message.jsx":"27","D:\\proj\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.jsx":"28","D:\\proj\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"29","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"30","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"31","D:\\proj\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"32","D:\\proj\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"33","D:\\proj\\src\\redux\\users-selectors.js":"34","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"35"},{"size":753,"mtime":1623385015121,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1622609977186,"results":"38","hashOfConfig":"37"},{"size":1567,"mtime":1623385015011,"results":"39","hashOfConfig":"37"},{"size":1393,"mtime":1623389064063,"results":"40","hashOfConfig":"37"},{"size":139,"mtime":1622609977435,"results":"41","hashOfConfig":"37"},{"size":2442,"mtime":1623227337390,"results":"42","hashOfConfig":"37"},{"size":3858,"mtime":1623394256784,"results":"43","hashOfConfig":"37"},{"size":1042,"mtime":1623219666515,"results":"44","hashOfConfig":"37"},{"size":1204,"mtime":1623385015136,"results":"45","hashOfConfig":"37"},{"size":1883,"mtime":1623385015152,"results":"46","hashOfConfig":"37"},{"size":217,"mtime":1622609978496,"results":"47","hashOfConfig":"37"},{"size":617,"mtime":1623385015027,"results":"48","hashOfConfig":"37"},{"size":637,"mtime":1623219616630,"results":"49","hashOfConfig":"37"},{"size":814,"mtime":1622609977809,"results":"50","hashOfConfig":"37"},{"size":1891,"mtime":1623323690020,"results":"51","hashOfConfig":"37"},{"size":1346,"mtime":1623385015043,"results":"52","hashOfConfig":"37"},{"size":2355,"mtime":1624344411195,"results":"53","hashOfConfig":"37"},{"size":1828,"mtime":1623306614882,"results":"54","hashOfConfig":"37"},{"size":594,"mtime":1623310361021,"results":"55","hashOfConfig":"37"},{"size":635,"mtime":1622621529367,"results":"56","hashOfConfig":"37"},{"size":285,"mtime":1623320349741,"results":"57","hashOfConfig":"37"},{"size":1754,"mtime":1623312392515,"results":"58","hashOfConfig":"37"},{"size":393,"mtime":1622637579111,"results":"59","hashOfConfig":"37"},{"size":1034,"mtime":1623317005095,"results":"60","hashOfConfig":"37"},{"size":2163,"mtime":1623385015043,"results":"61","hashOfConfig":"37"},{"size":362,"mtime":1622609978012,"results":"62","hashOfConfig":"37"},{"size":208,"mtime":1622609978043,"results":"63","hashOfConfig":"37"},{"size":773,"mtime":1623312984285,"results":"64","hashOfConfig":"37"},{"size":701,"mtime":1623226665235,"results":"65","hashOfConfig":"37"},{"size":894,"mtime":1624350064548,"results":"66","hashOfConfig":"37"},{"size":1957,"mtime":1623231622902,"results":"67","hashOfConfig":"37"},{"size":2202,"mtime":1623233823025,"results":"68","hashOfConfig":"37"},{"size":459,"mtime":1622609978465,"results":"69","hashOfConfig":"37"},{"size":695,"mtime":1624344501787,"results":"70","hashOfConfig":"37"},{"size":1367,"mtime":1624364221012,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1brdc61",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\proj\\src\\index.js",[],["155","156"],"D:\\proj\\src\\reportWebVitals.js",[],"D:\\proj\\src\\App.js",["157"],"import './App.css';\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom'\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (<div className='app-wrapper'>\r\n      <HeaderContainer />\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n\r\n        <Route exact path='/dialogs'\r\n          render={() => <DialogsContainer />} />\r\n\r\n        <Route path='/profile/:userId?'\r\n          render={() => <ProfileContainer />} />\r\n\r\n        <Route path='/users'\r\n          render={() => <UsersContainer />} />\r\n\r\n        <Route path='/login'\r\n          render={() => <Login />} />\r\n\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App)","D:\\proj\\src\\redux\\redux-store.js",[],"D:\\proj\\src\\redux\\sidebar-reducer.js",[],"D:\\proj\\src\\redux\\profile-reducer.js",[],"D:\\proj\\src\\redux\\users-reducer.js",["158","159","160"],"import { usersAPI } from '../api/api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    folowingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.count }\r\n        case TOOGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, folowingInProgress: action.isFetching\r\n                    ? [...state.folowingInProgress, action.userId]\r\n                    : state.folowingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toogleIsFetching = (isFetching) => ({ type: TOOGLE_IS_FETCHING, isFetching })\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOOGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toogleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toogleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;","D:\\proj\\src\\redux\\dialog-reducer.js",[],"D:\\proj\\src\\redux\\app-reducer.js",["161","162"],"import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,  //хоть в данный момент весь state состоит только из initialized, то все равно копируем весь state \r\n                //------------------//и перезаписываем только initialized. что бы в будущем не поломать state если в него добавим что-то новое\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","D:\\proj\\src\\redux\\auth-reducer.js",[],"D:\\proj\\src\\components\\common\\Preloader\\Preloader.js",["163"],"import React from 'react'\r\nimport preloader from '../../../assets/imajes/preloader.gif'\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","D:\\proj\\src\\components\\Header\\HeaderContainer.js",[],"D:\\proj\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"D:\\proj\\src\\components\\Navbar\\Navbar.jsx",["164","165","166"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from \"./Navbar.module.css\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to='/profile' activeClassName={s.activelink}>Profile</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n      <NavLink to='/dialogs' activeClassName={s.activelink}>Message</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n      <NavLink to='/users' activeClassName={s.activelink}>Users</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Music</a>\r\n      </div>\r\n      <div className={s.item}>\r\n        <a>Settings</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar","D:\\proj\\src\\components\\Login\\Login.jsx",[],"D:\\proj\\src\\components\\Profile\\ProfileContainer.jsx",[],"D:\\proj\\src\\components\\Users\\UsersContainer.jsx",["167","168"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount, getUsers, getCurrentPage, getIsFetching, getFolowingInProgress} from '../../redux/users-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader /> :\r\n                null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                folowingInProgress={this.props.folowingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/* let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        folowingInProgress: state.usersPage.folowingInProgress\r\n    }\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        folowingInProgress: getFolowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    // WithAuthRedirect,\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleIsFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)\r\n\r\n\r\n","D:\\proj\\src\\api\\api.js",[],"D:\\proj\\src\\components\\Header\\Header.jsx",["169"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://a.deviantart.net/avatars/j/a/jack070.png?7\" className={s.logo}></img>\r\n\r\n\r\n\r\n\r\n\r\n        <div className={s.loginBlock} >\r\n            {props.isAuth ?\r\n                <div> {props.login} - <button onClick={props.logout} >Log out</button> </div>\r\n                : <NavLink to={'/login'}> Login </NavLink>\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header","D:\\proj\\src\\hoc\\withAuthRedirect.js",[],"D:\\proj\\src\\utils\\validators\\validators.js",[],"D:\\proj\\src\\components\\Dialogs\\Dialogs.jsx",["170","171","172","173"],"import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Redirect } from 'react-router'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    // Создаем массив dialogsElements из dialogsData преобразовывая данные\r\n    let dialogsElements = state.dialogsData.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />)\r\n    // Аналогично\r\n    let messagesElements = state.messagesData.map(m => <Message message={m.message} ket={m.id} />)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    // if (!props.isAuts) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={AddNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// const AddMessageForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit} >\r\n//             <div>\r\n//                 <Field component={'textarea'} name={'newMessageBody'} placeholder={'Enter your message'} />\r\n//             </div>\r\n//             <div><button>Send</button></div>\r\n//         </form>\r\n//     )\r\n// }\r\n// \r\n// const AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs","D:\\proj\\src\\components\\Profile\\Profile.jsx",[],"D:\\proj\\src\\components\\common\\FormsControls\\FormsControls.jsx",[],"D:\\proj\\src\\components\\Users\\Users.jsx",["174"],"import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/imajes/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                    onClick={(e) => { props.onPageChanged(p); }} > {p} </span>\r\n            })}\r\n        </div>\r\n\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id} >\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.folowingInProgress\r\n                                .some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id);\r\n                                }}>\r\n                                Unfollow</button>\r\n\r\n\r\n                            : <button disabled={props.folowingInProgress\r\n                                .some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id);\r\n                                }} >\r\n                                Follow</button>}\r\n\r\n\r\n                    </div>\r\n                </span>\r\n\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status} </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"} </div>\r\n                        <div>{\"u.location.city\"} </div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","D:\\proj\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"D:\\proj\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\proj\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.jsx",[],"D:\\proj\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["175","176","177"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, apdateNewPostTextActionCreator } from \"../../../redux/profile-reducer\"\r\nimport store from '../../../redux/redux-store';\r\nimport MyPosts from './MyPosts'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["178","179","180"],"D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",[],"D:\\proj\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["181","182"],"import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10)    //для валидации! Внимательно смотреть примеры из FAQ REDUX-FORM. Если сразу вставлять вызов функции в validate то  \r\n//------------------------------------------//будет ошибка бесконечного вызова setData\r\n\r\nfunction AddNewPostForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={Textarea}  //когда компонента используется не стандартная, а какая либо созданная своя,\r\n                    //-----------------------// то указывается в {}, а не в ковычках\r\n                    name='newPostText'\r\n                    placeholder='Enter post text'\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({ form: 'ProfileAddNewPstForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n    console.log(props)\r\n\r\n    let postsElements = props.posts.map(p => <Post\r\n        message={p.message}\r\n        likesCount={p.likesCount}\r\n        number={p.id} />)\r\n    let newPostElement = React.createRef();\r\n    // let onAddPost = () => {\r\n    //     props.addPost()\r\n    // }\r\n    const OnAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.postsBlock}>\r\n                <h3>\r\n                    My posts\r\n                </h3>\r\n                <AddNewPostForm onSubmit={OnAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts","D:\\proj\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["183"],"import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img src=\"http://stalker-way.ru/newd/stalker.gif\" />\r\n                id {props.number}\r\n                <br />\r\n                post {props.message}.\r\n                <br />\r\n                likes {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","D:\\proj\\src\\redux\\users-selectors.js",[],"D:\\proj\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":57,"column":64,"nodeType":"194","messageId":"195","endLine":57,"endColumn":66},{"ruleId":"192","severity":1,"message":"196","line":89,"column":46,"nodeType":"194","messageId":"195","endLine":89,"endColumn":48},{"ruleId":"192","severity":1,"message":"196","line":102,"column":46,"nodeType":"194","messageId":"195","endLine":102,"endColumn":48},{"ruleId":"188","severity":1,"message":"197","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":20},{"ruleId":"188","severity":1,"message":"198","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":7,"column":9,"nodeType":"201","endLine":7,"endColumn":32},{"ruleId":"202","severity":1,"message":"203","line":18,"column":9,"nodeType":"201","endLine":18,"endColumn":12},{"ruleId":"202","severity":1,"message":"203","line":21,"column":9,"nodeType":"201","endLine":21,"endColumn":12},{"ruleId":"202","severity":1,"message":"203","line":24,"column":9,"nodeType":"201","endLine":24,"endColumn":12},{"ruleId":"188","severity":1,"message":"204","line":12,"column":10,"nodeType":"190","messageId":"191","endLine":12,"endColumn":18},{"ruleId":"188","severity":1,"message":"205","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":7,"column":9,"nodeType":"201","endLine":7,"endColumn":90},{"ruleId":"188","severity":1,"message":"206","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":15},{"ruleId":"188","severity":1,"message":"207","line":5,"column":17,"nodeType":"190","messageId":"191","endLine":5,"endColumn":26},{"ruleId":"188","severity":1,"message":"208","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":18},{"ruleId":"188","severity":1,"message":"209","line":19,"column":9,"nodeType":"190","messageId":"191","endLine":19,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":27,"column":29,"nodeType":"201","endLine":27,"endColumn":123},{"ruleId":"188","severity":1,"message":"210","line":1,"column":8,"nodeType":"190","messageId":"191","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"211","line":3,"column":32,"nodeType":"190","messageId":"191","endLine":3,"endColumn":62},{"ruleId":"188","severity":1,"message":"212","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":13},{"ruleId":"188","severity":1,"message":"213","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":17,"column":21,"nodeType":"201","endLine":17,"endColumn":111},{"ruleId":"199","severity":1,"message":"200","line":21,"column":21,"nodeType":"201","endLine":21,"endColumn":61},{"ruleId":"214","severity":1,"message":"215","line":28,"column":1,"nodeType":"190","messageId":"216","endLine":28,"endColumn":15},{"ruleId":"188","severity":1,"message":"217","line":37,"column":9,"nodeType":"190","messageId":"191","endLine":37,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":8,"column":17,"nodeType":"201","endLine":8,"endColumn":69},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'stopSubmit' is defined but never used.","'authAPI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'usersAPI' is defined but never used.","'WithAuthRedirect' is defined but never used.","'Field' is defined but never used.","'reduxForm' is defined but never used.","'Redirect' is defined but never used.","'newMessageBody' is assigned a value but never used.","'React' is defined but never used.","'apdateNewPostTextActionCreator' is defined but never used.","'store' is defined but never used.","'ProfileStatus' is defined but never used.","no-func-assign","'AddNewPostForm' is a function.","isAFunction","'newPostElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]